// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider             = "postgres"
  url                  = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model AppSettings {
  id                   Int       @id @default(1)
  appId                String    @default(uuid())

  allowNewUsers        Boolean   @default(true)
  registerEmailFilters String[]  @default([])

  createdAt            DateTime  @default(now())
}

model User {
  id            String    @id @default(cuid())
  superadmin    Boolean   @default(false)
  type          String    @default("user")
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  accounts      Account[]
  sessions      Session[]
  projects      ProjectUsers[]
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  createdAt    DateTime @default(now())
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Project {
  id              String   @id @default(cuid())
  name            String
  slug            String   @unique
  domain          String   @unique
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  users           ProjectUsers[]
}

model ProjectUsers {
  id        String   @id @default(cuid())
  role      String   @default("member")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId String

  @@unique([userId, projectId])
}